Chapter 2: Guessing Game

-- Rust Features --

- We can create a new empty String with String::new()

- Some functions return a Result enumeration which must be handled to avoid errors
    - If this Result returns an Err, Expect() will crash the program and display message
    - If this Result is Ok then it will be used

- Rust allows for easy use of mutable references 

- Use of fString notation: println!("You guessed: {}", guess)

- We can Specify Ranges by using notation such as 1..101 or 1..=100

- Match statements are very strong and can be used in a lot of interesting places

-- Cargo Utility -- 

- We can use 'crates' or packages by adding to 'Cargo.toml' the following rand = "0.8.5"

- Cargo.lock is how builds are replicatable. It holds our versions when we first build so that it can be rebuilt.

- Cargo update: ignores Cargo.lock and finds newest package that fits the specifications of Cargo.toml

- Cargo doc --open: Creates documentation on how to use all installed dependencies