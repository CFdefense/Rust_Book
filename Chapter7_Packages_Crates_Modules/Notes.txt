** Packages and Crates **

- A crate is the smallest amount of code that the Rust compiler considers at a time.

- A crate can come in one of two forms: a binary crate or a library crate. 

- Binary crates are programs you can compile to an executable that you can run, such as a command-line program or a server.

- Library crates don’t have a main function, and they don’t compile to an executable. 
  Instead, they define functionality intended to be shared with multiple projects. For example, the rand crate.

- A package is a bundle of one or more crates that provides a set of functionality. A package contains a Cargo.toml file that describes how to build those crates.

- A package can have multiple binary crates by placing files in the src/bin directory: each file will be a separate binary crate.

- If a package contains src/main.rs and src/lib.rs, it has two crates: a binary and a library, both with the same name as the package.

