** Unrecoverable Errors **

- Rust has two types of errors, unrecoverable errors and recoverable errors

- Unrecoverable errors are handled by the panic! macro

- Recoverable errors are handled by Result<T, E>

- "RUST_BACKTRACE=1 cargo run" heres an example of how we can get more verbose debugging with a stack trace

** Recoverable Errors **

- For some errors we may not want to crash the program

- One way we can do this is through the Result enum which is made up of Err(E) and Ok(T)

- Instead of handling errors within some code you can return it to the calling code to deal with, this is called error propagation

- The ? operator for error propagation can only be used within a function whose return type is compatable with the value ? is used on

** to Panic or Not to Panic **

- It is good practice to really consider when we should be calling panic vs returning a Result

- In addition after returning a result we can decide to panic if we really need to but we give the program options

- Generally it is good practice to panic when your program enters some unknown state, whether variable types or logic becomes undetermined

- When failure is acceptable and expected it is a better practice to return a Result to handle it